/*******************************************************************************
 * Size: 16 px
 * Bpp: 3
 * Opts: --size 16 --format lvgl --bpp 3 --font ./Rubik-Regular.ttf -o ./regular.bin --range 0x20-0x7F
 ******************************************************************************/

#ifdef LV_LVGL_H_INCLUDE_SIMPLE
#include "lvgl.h"
#else
#include "lvgl/lvgl.h"
#endif

#ifndef REGULAR
#define REGULAR 1
#endif

#if REGULAR

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+0020 " " */

    /* U+0021 "!" */
    0xd4, 0xf, 0xfe, 0x26, 0xba, 0x96,

    /* U+0022 "\"" */
    0x1e, 0x47, 0x2, 0xe0, 0x7b, 0x81, 0x34, 0x8c,
    0x0,

    /* U+0023 "#" */
    0x3, 0x10, 0x3f, 0x8e, 0x1, 0x28, 0x1c, 0x80,
    0x91, 0x2, 0xde, 0xf, 0xc5, 0xf4, 0x3d, 0x2a,
    0xd0, 0x95, 0x2, 0x86, 0x4c, 0x34, 0x6, 0x24,
    0x10, 0x18, 0xfe, 0x17, 0xc1, 0xf8, 0x1d, 0x5,
    0xa2, 0xae, 0x0, 0x41, 0x48, 0x32, 0x20, 0x64,
    0x1, 0x90, 0x20,

    /* U+0024 "$" */
    0x3, 0x58, 0x7, 0xc9, 0xa2, 0x6, 0x3a, 0x92,
    0xd4, 0xb, 0x9b, 0xfa, 0x28, 0x0, 0xb4, 0x1,
    0xa2, 0x4, 0x80, 0xd6, 0x80, 0x43, 0x99, 0x3,
    0x9e, 0x73, 0x63, 0x3, 0x1b, 0xeb, 0x94, 0xf,
    0x2a, 0xd1, 0x5d, 0x1, 0xb8, 0x4, 0x21, 0x0,
    0x60, 0x22, 0x9d, 0xfb, 0xc, 0x1, 0x7a, 0x4a,
    0xf2, 0x6, 0x4d, 0x20, 0x10,

    /* U+0025 "%" */
    0xf, 0xf4, 0x3, 0x5a, 0x1, 0x2e, 0x64, 0x3,
    0x54, 0x10, 0x89, 0x20, 0x65, 0x3, 0xfb, 0xb4,
    0x0, 0x82, 0x9, 0x41, 0x0, 0xcf, 0x74, 0x1f,
    0x3, 0xa7, 0xeb, 0x51, 0x7e, 0x80, 0x75, 0x2e,
    0x45, 0x64, 0x9, 0xac, 0x43, 0x45, 0x0, 0x32,
    0x81, 0xfd, 0xd2, 0x2, 0x9, 0x90, 0x62, 0x81,
    0x4d, 0x8c, 0x80,

    /* U+0026 "&" */
    0x0, 0x6f, 0xe6, 0x7, 0xb3, 0xae, 0x30, 0x31,
    0x11, 0x45, 0x80, 0xc4, 0x10, 0xc, 0x81, 0xce,
    0x2c, 0x20, 0x1d, 0x45, 0x78, 0x3, 0x0, 0x71,
    0x24, 0x42, 0x84, 0x73, 0xb0, 0xe3, 0x81, 0x6,
    0x80, 0xc7, 0xb6, 0x2, 0xe0, 0x5c, 0x8a, 0x1,
    0xb5, 0x73, 0x0, 0xe0, 0x24, 0x38, 0xdb, 0xe3,
    0x0,

    /* U+0027 "'" */
    0x1e, 0x0, 0xe0, 0x66, 0x80,

    /* U+0028 "(" */
    0x3, 0xf2, 0xfc, 0x0, 0xd5, 0x40, 0x51, 0x50,
    0x4, 0xc0, 0xc7, 0x81, 0xc4, 0xf, 0xfe, 0x89,
    0x3, 0x1e, 0x6, 0x48, 0x6, 0xa6, 0x1, 0x18,
    0xf8, 0x13, 0xf8, 0x0,

    /* U+0029 ")" */
    0x3, 0xa7, 0xa0, 0x2c, 0x50, 0x16, 0xe0, 0x2a,
    0x8, 0x2, 0x18, 0x18, 0x81, 0xfd, 0xc0, 0xdc,
    0xf, 0xe2, 0x0, 0x86, 0x1, 0x2, 0x14, 0x42,
    0x53, 0x45, 0xd8, 0x0,

    /* U+002A "*" */
    0x0, 0x7a, 0x2, 0x8c, 0x5, 0x0, 0xe8, 0xa8,
    0x8e, 0x81, 0xe4, 0x35, 0x4c, 0x0, 0xea, 0xb0,
    0x0,

    /* U+002B "+" */
    0x3, 0xff, 0x85, 0x60, 0x1f, 0xfd, 0x12, 0x6,
    0x5f, 0xc9, 0x3f, 0x92, 0x5b, 0x15, 0x6c, 0x82,
    0x53, 0x29, 0x40, 0x7f, 0xf2, 0x40,

    /* U+002C "," */
    0x4, 0x87, 0xe0, 0x69, 0xc,

    /* U+002D "-" */
    0x4, 0xe1, 0xf6, 0xd7, 0x5b, 0xa0,

    /* U+002E "." */
    0xfc, 0x0,

    /* U+002F "/" */
    0x3, 0x8f, 0x20, 0x75, 0x4, 0xe, 0x6c, 0x7,
    0x21, 0x40, 0xee, 0x88, 0x1c, 0xb8, 0x1c, 0xc2,
    0x3, 0xab, 0x3, 0x89, 0x50, 0x3a, 0x92, 0x3,
    0x9d, 0x3, 0x98, 0x60, 0x75, 0x40, 0x71, 0x2e,
    0x7, 0x22, 0x80, 0xe0,

    /* U+0030 "0" */
    0x0, 0x6f, 0xec, 0x80, 0x8e, 0x4e, 0xa, 0x80,
    0x51, 0xa3, 0xc2, 0x0, 0x44, 0x80, 0x99, 0x0,
    0x50, 0x1b, 0x82, 0x7, 0xff, 0x4c, 0xa0, 0x37,
    0x4, 0x22, 0x40, 0x4c, 0x80, 0xa3, 0x48, 0xc2,
    0x0, 0x39, 0x36, 0x15, 0x0,

    /* U+0031 "1" */
    0x2, 0x7e, 0x0, 0xb0, 0x11, 0x94, 0x0, 0xcd,
    0x60, 0x1f, 0x40, 0x7f, 0xf8, 0x8,

    /* U+0032 "2" */
    0x0, 0xb7, 0xea, 0x4, 0xa8, 0x8d, 0x60, 0x10,
    0x67, 0x19, 0x20, 0x58, 0x16, 0xc, 0x78, 0x4,
    0x43, 0x3, 0x8c, 0x24, 0x6, 0x38, 0x60, 0x31,
    0xc3, 0x1, 0x8e, 0x18, 0x81, 0x1c, 0x31, 0x3,
    0x70, 0x91, 0xb9, 0x12, 0xa, 0x4d, 0x80,

    /* U+0033 "3" */
    0x1b, 0xff, 0x21, 0x27, 0x0, 0x61, 0x37, 0x61,
    0x88, 0x1a, 0x2a, 0x40, 0xcd, 0xc8, 0xe, 0x81,
    0xf6, 0x6, 0xd9, 0x54, 0x60, 0x44, 0x95, 0x14,
    0x30, 0x38, 0x83, 0x18, 0x18, 0xb2, 0xa5, 0x73,
    0x88, 0x2c, 0x71, 0xac, 0x40,

    /* U+0034 "4" */
    0x3, 0xaf, 0x80, 0x79, 0x20, 0x1f, 0xaa, 0x3,
    0xe8, 0x28, 0x1e, 0x2e, 0x81, 0xf7, 0x48, 0x7,
    0xa1, 0xa0, 0x78, 0xb6, 0x26, 0x4, 0x82, 0xf,
    0x68, 0x2c, 0xd5, 0xbc, 0x15, 0x65, 0x2e, 0x5,
    0x1, 0xff, 0x0,

    /* U+0035 "5" */
    0x7, 0xff, 0x0, 0x62, 0x4e, 0x0, 0x43, 0x7c,
    0x3, 0x81, 0xf8, 0x8d, 0xfb, 0x10, 0x32, 0xb0,
    0xe0, 0x13, 0x44, 0xf0, 0x80, 0x90, 0x11, 0x3a,
    0x90, 0x31, 0x0, 0xa0, 0x12, 0x4, 0x92, 0x57,
    0x28, 0x82, 0xc7, 0x1a, 0xe0,

    /* U+0036 "6" */
    0x3, 0x1f, 0x0, 0xfb, 0x88, 0x7, 0xa1, 0xa0,
    0x78, 0xb6, 0x40, 0x7b, 0x87, 0xf2, 0x2, 0x85,
    0x5a, 0x15, 0x0, 0x6a, 0xa4, 0xc6, 0x2, 0x30,
    0x19, 0x10, 0x3f, 0xe2, 0x28, 0x19, 0xa0, 0x14,
    0xe7, 0x38, 0x80, 0x15, 0x11, 0xac, 0x40,

    /* U+0037 "7" */
    0x9f, 0xfb, 0x59, 0x38, 0x32, 0xde, 0x23, 0x81,
    0xdc, 0x20, 0x31, 0x4c, 0xe, 0xa2, 0x81, 0xcd,
    0x10, 0x32, 0x1c, 0xe, 0xe1, 0x1, 0x8a, 0x60,
    0x75, 0x14, 0xe, 0x48, 0x40, 0x80,

    /* U+0038 "8" */
    0x0, 0xb7, 0xec, 0xc0, 0x95, 0x12, 0x1c, 0x60,
    0x38, 0xcd, 0xa9, 0xa0, 0x44, 0xc, 0xc0, 0xb9,
    0x84, 0x9a, 0x40, 0x9, 0x1e, 0xc8, 0x60, 0x6,
    0x92, 0xd3, 0x34, 0x4, 0x55, 0x24, 0x68, 0x80,
    0xc0, 0x6c, 0x18, 0xa, 0x6, 0xc1, 0x8, 0x73,
    0x6a, 0xd8, 0x3, 0xa2, 0x43, 0x90, 0x0,

    /* U+0039 "9" */
    0x0, 0xf7, 0xe8, 0x5, 0x20, 0x46, 0xd8, 0x3,
    0x59, 0xc8, 0x2d, 0xe, 0x4, 0xc6, 0x21, 0x81,
    0xe4, 0x10, 0x11, 0x18, 0xa8, 0xc2, 0xe1, 0x8a,
    0xa7, 0xa6, 0x81, 0x5d, 0x43, 0x40, 0x63, 0xc4,
    0x3, 0x9a, 0xa0, 0x7a, 0x34, 0x4,

    /* U+003A ":" */
    0xdc, 0x6, 0xe0, 0x7b, 0x70, 0x0,

    /* U+003B ";" */
    0xbc, 0x81, 0x5e, 0x40, 0xf9, 0xb, 0x41, 0xa0,
    0x78,

    /* U+003C "<" */
    0x3, 0xc8, 0xc, 0x74, 0x2, 0x78, 0x70, 0x16,
    0x3c, 0x4b, 0xab, 0x0, 0x30, 0xd0, 0x12, 0x8f,
    0x1, 0x9e, 0x3d, 0x1, 0x1e, 0xac, 0x3, 0x58,
    0x40,

    /* U+003D "=" */
    0x3, 0xed, 0xff, 0xd6, 0xf6, 0x29, 0x71, 0x3,
    0xed, 0xff, 0xd6, 0xf6,

    /* U+003E ">" */
    0x60, 0x7a, 0x62, 0x6, 0xc3, 0x30, 0x23, 0x9c,
    0xa0, 0x69, 0x56, 0x3, 0x24, 0x24, 0x0, 0xe5,
    0x8, 0x78, 0x66, 0x2c, 0x78, 0x80, 0x76, 0x1,
    0x80,

    /* U+003F "?" */
    0x1, 0x3f, 0x66, 0x3, 0x36, 0x82, 0x34, 0x64,
    0x3c, 0x68, 0x2c, 0x9, 0x85, 0x80, 0x92, 0x80,
    0xc6, 0x98, 0x6, 0xe3, 0x1, 0x91, 0xa0, 0x71,
    0xc, 0xe, 0x78, 0x81, 0xcf, 0x90, 0x3b, 0x90,
    0x20,

    /* U+0040 "@" */
    0x2, 0x37, 0xfb, 0x30, 0x39, 0xe3, 0x76, 0x5a,
    0xc0, 0x46, 0x58, 0x89, 0x3c, 0x28, 0x8, 0xd1,
    0xde, 0xf1, 0x10, 0x5, 0x87, 0x58, 0x1, 0x40,
    0x80, 0x44, 0xa1, 0x80, 0x45, 0x81, 0xf1, 0x3,
    0xff, 0x90, 0x48, 0x31, 0x2, 0x24, 0xc1, 0xa2,
    0xce, 0xda, 0x64, 0x44, 0x65, 0x7d, 0xe7, 0xd4,
    0x2, 0x4c, 0xc1, 0x6, 0x62, 0x5, 0x64, 0x7f,
    0x63, 0x88, 0x19, 0xfe, 0xd9, 0xe9, 0x0,

    /* U+0041 "A" */
    0x3, 0x5e, 0xc0, 0xfc, 0x85, 0x3, 0xe6, 0x21,
    0x20, 0x3d, 0x53, 0x14, 0xe, 0x25, 0x82, 0x60,
    0x75, 0xc, 0x70, 0x40, 0xcd, 0x0, 0x42, 0x81,
    0x11, 0x89, 0x93, 0x2, 0xa2, 0x6d, 0x20, 0x80,
    0x35, 0x6f, 0xe, 0x10, 0xe9, 0x73, 0x43, 0x4,
    0x7, 0x50, 0x80,

    /* U+0042 "B" */
    0x9f, 0xf6, 0x40, 0x52, 0x61, 0x48, 0x6, 0xf7,
    0x14, 0xf, 0x10, 0x3e, 0x34, 0x50, 0x1f, 0xd9,
    0x32, 0x2, 0xdc, 0x59, 0x0, 0x96, 0xc2, 0x1,
    0xf1, 0x60, 0x7c, 0x58, 0x6, 0xf6, 0x10, 0x4,
    0x98, 0x52,

    /* U+0043 "C" */
    0x0, 0x6f, 0xf4, 0x3, 0x64, 0xe3, 0x6e, 0x2,
    0xd, 0x1c, 0xc2, 0x6, 0x88, 0x11, 0x24, 0x0,
    0x81, 0xdb, 0x0, 0xff, 0xea, 0x10, 0x3b, 0x60,
    0x68, 0x81, 0x12, 0x42, 0xd, 0x1c, 0xc2, 0x0,
    0xc9, 0xc6, 0xdc, 0x0,

    /* U+0044 "D" */
    0x9f, 0xf5, 0x20, 0x69, 0x26, 0xb1, 0x2, 0x6e,
    0x98, 0x40, 0x3e, 0x29, 0x0, 0xfc, 0x40, 0xff,
    0xed, 0x90, 0x3f, 0x14, 0x80, 0x4d, 0xd3, 0x8,
    0x5, 0x24, 0xd6, 0x20,

    /* U+0045 "E" */
    0x9f, 0xfa, 0x80, 0x93, 0xb8, 0x6, 0xf9, 0x1,
    0xff, 0xc6, 0xff, 0x98, 0xb, 0x79, 0x80, 0x4b,
    0x80, 0xff, 0xe3, 0xb7, 0xc8, 0x4, 0x9e,

    /* U+0046 "F" */
    0x9f, 0xfa, 0x80, 0x93, 0xb8, 0x6, 0xf9, 0x1,
    0xff, 0xc6, 0x27, 0x80, 0xb6, 0xe4, 0x2, 0xde,
    0x40, 0x12, 0xe0, 0x3f, 0xf9, 0xa0,

    /* U+0047 "G" */
    0x0, 0x6f, 0xf5, 0x20, 0x59, 0x38, 0xd6, 0x22,
    0xd, 0x1c, 0xc3, 0x86, 0x88, 0x11, 0xdc, 0x1,
    0x3, 0x89, 0x1, 0xcb, 0xfc, 0x7, 0x2b, 0x48,
    0xf, 0x92, 0x10, 0x22, 0x7, 0x22, 0x1a, 0x20,
    0x48, 0xa1, 0x6, 0x8e, 0xd1, 0x80, 0x3a, 0x71,
    0x3c, 0x0,

    /* U+0048 "H" */
    0x9c, 0xe, 0x9c, 0xf, 0xfe, 0xff, 0xfc, 0xc0,
    0xcd, 0xf1, 0x3, 0x49, 0xc8, 0xf, 0xfe, 0xf0,

    /* U+0049 "I" */
    0x9c, 0xf, 0xfe, 0x50,

    /* U+004A "J" */
    0x1b, 0xff, 0x61, 0x27, 0x88, 0x4, 0xdf, 0x1,
    0xff, 0xe3, 0x5c, 0x81, 0x88, 0x62, 0x81, 0x21,
    0x4a, 0x75, 0xca, 0x18, 0xb1, 0xc6, 0xb8,

    /* U+004B "K" */
    0x9c, 0x8, 0xec, 0x3, 0xdc, 0xf0, 0x3b, 0x1c,
    0x40, 0xd8, 0xe2, 0x6, 0xc7, 0x10, 0x38, 0xd2,
    0x7, 0xdc, 0xf, 0xa2, 0xa0, 0x79, 0xb2, 0x80,
    0x7a, 0x37, 0x1, 0xe8, 0xa3, 0x3, 0xd5, 0x42,

    /* U+004C "L" */
    0x9c, 0xf, 0xff, 0xf8, 0x1c, 0xdf, 0x20, 0x12,
    0x77,

    /* U+004D "M" */
    0x9c, 0xf, 0x2e, 0x80, 0x40, 0x3a, 0x1, 0x98,
    0x19, 0x10, 0x3a, 0x1, 0x42, 0x6, 0x8c, 0x2,
    0x30, 0xc, 0xc4, 0x11, 0x30, 0x3a, 0x34, 0x60,
    0x1e, 0x62, 0xa2, 0x7, 0xcc, 0x70, 0x3f, 0x4e,
    0x80, 0xff, 0xe7, 0x0,

    /* U+004E "N" */
    0x9c, 0xe, 0xd4, 0x5, 0x3, 0xf2, 0x40, 0x3e,
    0x30, 0xf, 0xa1, 0x60, 0x79, 0x24, 0x20, 0x7a,
    0x88, 0x7, 0xd1, 0x20, 0x1e, 0x66, 0x1, 0xf7,
    0x24, 0x7, 0x8b, 0x3, 0xf4, 0x0,

    /* U+004F "O" */
    0x0, 0x6f, 0xf4, 0x3, 0x64, 0xe2, 0x78, 0x4,
    0x1a, 0x3b, 0xb, 0xc, 0x90, 0x13, 0x18, 0x2,
    0x3, 0x8b, 0x3, 0xf3, 0x20, 0x7f, 0xf1, 0x99,
    0x0, 0x80, 0xe2, 0xc2, 0x24, 0x4, 0xc6, 0x10,
    0x68, 0xec, 0x2c, 0x1c, 0x9c, 0x4f, 0x0,

    /* U+0050 "P" */
    0x9f, 0xf5, 0x20, 0x52, 0x4d, 0x62, 0x1, 0xba,
    0x61, 0x40, 0xf1, 0x4, 0xf, 0xfe, 0x11, 0xa3,
    0x80, 0xfe, 0xca, 0x20, 0x16, 0xdb, 0xb0, 0x24,
    0xa2, 0x7, 0xff, 0x48,

    /* U+0051 "Q" */
    0x0, 0x6f, 0xf4, 0x3, 0x64, 0xe2, 0x78, 0x4,
    0x1a, 0x3b, 0xb, 0xc, 0x90, 0x13, 0x18, 0x2,
    0x3, 0x8b, 0x3, 0xf3, 0x3, 0xff, 0x8e, 0xc0,
    0x90, 0x1c, 0x58, 0x44, 0x80, 0x98, 0xc2, 0xd,
    0x1d, 0x81, 0x83, 0x93, 0x88, 0x82, 0x0, 0xdf,
    0xec, 0x20,

    /* U+0052 "R" */
    0x9f, 0xf5, 0x20, 0x52, 0x4d, 0x60, 0x26, 0xe9,
    0x43, 0x3, 0xc8, 0x70, 0x3c, 0x47, 0x0, 0x4e,
    0xe1, 0x0, 0xdb, 0x1a, 0x40, 0x5b, 0x6, 0x80,
    0x92, 0x9b, 0x10, 0x3d, 0x4, 0x3, 0xe8, 0x88,
    0x1e, 0x66, 0x0,

    /* U+0053 "S" */
    0x0, 0xf7, 0xec, 0x80, 0x9c, 0x71, 0x8a, 0x80,
    0x45, 0x5c, 0xc2, 0x1, 0xfb, 0x40, 0x9, 0x18,
    0x11, 0x40, 0x2a, 0x9e, 0xa0, 0x3a, 0xe6, 0xd7,
    0xa0, 0x31, 0x9b, 0xd, 0x5, 0x81, 0x8d, 0x4,
    0x48, 0x3, 0x70, 0x5, 0x3a, 0xda, 0xb4, 0x45,
    0x8e, 0x43, 0x94, 0x0,

    /* U+0054 "T" */
    0x9f, 0xfd, 0xb1, 0xb8, 0x26, 0xd5, 0x48, 0xa3,
    0x48, 0x60, 0x7f, 0xff, 0xc0, 0xf0,

    /* U+0055 "U" */
    0xb8, 0xe, 0x9c, 0xf, 0x88, 0x1f, 0xfe, 0xb2,
    0x40, 0x73, 0x38, 0x30, 0x22, 0x49, 0xc, 0xae,
    0x61, 0x6, 0x6a, 0x35, 0x80,

    /* U+0056 "V" */
    0x7c, 0x81, 0xd7, 0xb0, 0x80, 0xe4, 0xc1, 0xa0,
    0x64, 0x30, 0xa4, 0x80, 0xb8, 0x41, 0x4, 0x4,
    0x90, 0x1, 0x2a, 0x1, 0xe, 0x4, 0x88, 0xe,
    0x10, 0x15, 0xc, 0x24, 0x3, 0x12, 0xc8, 0x70,
    0x39, 0x27, 0x8, 0xe, 0xa1, 0x20, 0x1e, 0x24,
    0x38, 0x10,

    /* U+0057 "W" */
    0x3d, 0x1, 0xf3, 0xe0, 0x82, 0x7, 0xd8, 0xd,
    0x80, 0xf9, 0xa0, 0x9, 0x80, 0x7c, 0x80, 0x24,
    0x0, 0x90, 0xc, 0x28, 0x23, 0x0, 0xc0, 0x84,
    0x50, 0x41, 0x80, 0x61, 0xa1, 0x9, 0x70, 0x40,
    0x11, 0xb1, 0x20, 0x44, 0x80, 0xc4, 0x9e, 0xf,
    0x24, 0x3, 0x24, 0xc, 0x64, 0x38, 0x1b, 0x82,
    0x1, 0x0, 0x40, 0x64, 0x28, 0x13, 0x4, 0x0,

    /* U+0058 "X" */
    0x5d, 0x81, 0x8f, 0x68, 0xc2, 0x5, 0xcb, 0x1c,
    0x40, 0x10, 0xf0, 0x6, 0x26, 0x5b, 0x10, 0x26,
    0x67, 0x10, 0xe, 0xe0, 0xd0, 0x3c, 0xc0, 0x10,
    0x3d, 0x49, 0x42, 0x6, 0x83, 0xf0, 0xe0, 0x49,
    0xb1, 0x28, 0x58, 0xa, 0x60, 0x6, 0x61, 0x63,
    0x81, 0xb8, 0x80,

    /* U+0059 "Y" */
    0x7c, 0x81, 0xdb, 0x18, 0x80, 0x66, 0x60, 0x89,
    0x0, 0xa2, 0x40, 0xcc, 0x1, 0x4, 0x2, 0x85,
    0x86, 0x88, 0x12, 0x49, 0x44, 0x3, 0xa0, 0x4c,
    0x81, 0xc5, 0x8, 0x7, 0xc4, 0xf, 0xfe, 0xb8,

    /* U+005A "Z" */
    0x3f, 0xfd, 0x8c, 0x9c, 0x83, 0xd, 0xf8, 0x40,
    0x3a, 0x18, 0x40, 0xc5, 0xa6, 0x7, 0x71, 0x40,
    0xe8, 0x60, 0x1c, 0x9a, 0x60, 0x75, 0x14, 0xe,
    0x82, 0x1, 0xc5, 0x80, 0x6f, 0xc0, 0x24, 0xf0,

    /* U+005B "[" */
    0x3, 0x6f, 0xd8, 0x2b, 0xc1, 0x44, 0xf, 0xfe,
    0xe9, 0x20, 0xb, 0x67, 0xb5, 0xc0,

    /* U+005C "\\" */
    0x98, 0xf, 0x52, 0x40, 0x71, 0x2a, 0x7, 0xab,
    0x3, 0xcc, 0x30, 0x3c, 0xa8, 0x1e, 0x84, 0x80,
    0xe2, 0x54, 0xf, 0x56, 0x7, 0x98, 0x40, 0x79,
    0x70, 0x3d, 0xd0, 0x1e, 0x42, 0x1, 0xe6, 0xc0,
    0x7a, 0x82,

    /* U+005D "]" */
    0x3, 0xa7, 0xf0, 0xb4, 0xc0, 0x15, 0xc0, 0xff,
    0xf4, 0x90, 0x29, 0xa0, 0xb, 0x70,

    /* U+005E "^" */
    0x5, 0x81, 0x79, 0x86, 0x5d, 0xd0,

    /* U+005F "_" */
    0x0, 0x4f, 0xe0, 0x1f, 0x6f, 0xdc, 0x5b, 0xfe,

    /* U+0060 "`" */
    0x6c, 0x5, 0x20, 0x3a, 0xc8,

    /* U+0061 "a" */
    0x1, 0x3f, 0x66, 0x2, 0x39, 0x54, 0x43, 0xd6,
    0xa1, 0xe1, 0xa2, 0x99, 0x0, 0xbe, 0x98, 0x1,
    0xaf, 0xea, 0x42, 0x10, 0x1, 0x20, 0x85, 0x4f,
    0x80, 0x35, 0xdb, 0x20,

    /* U+0062 "b" */
    0xd4, 0xf, 0xfe, 0x63, 0xfd, 0x88, 0x5, 0x64,
    0x1c, 0x5, 0x9b, 0x60, 0xc1, 0x2, 0x23, 0x6,
    0x6, 0x20, 0x18, 0x18, 0x80, 0x24, 0x0, 0x8c,
    0x3, 0xb6, 0xc1, 0x85, 0x64, 0x1c, 0x0,

    /* U+0063 "c" */
    0x0, 0xf7, 0xe8, 0x4, 0xe2, 0xad, 0xa8, 0x8,
    0xa2, 0x8d, 0x2, 0x30, 0x14, 0xc0, 0x44, 0xc,
    0x40, 0x88, 0x18, 0x82, 0x30, 0x14, 0xc0, 0x22,
    0x8a, 0x34, 0x1, 0xc5, 0x5b, 0x50,

    /* U+0064 "d" */
    0x3, 0xc7, 0xa0, 0x3f, 0xf9, 0x13, 0xf6, 0x60,
    0x4d, 0x94, 0x54, 0xa, 0x2a, 0xe3, 0x0, 0x46,
    0x2, 0xa0, 0x62, 0x7, 0xe2, 0x7, 0x88, 0xc0,
    0x54, 0x9, 0xaa, 0xe3, 0x2, 0x8d, 0x45, 0x40,
    0x0,

    /* U+0065 "e" */
    0x0, 0xf7, 0xcc, 0x9, 0xc5, 0x54, 0x60, 0x22,
    0x8a, 0x38, 0x8, 0xe0, 0x58, 0x10, 0x17, 0xfa,
    0x81, 0xa6, 0xdc, 0x48, 0x62, 0x60, 0x80, 0x45,
    0x13, 0xd8, 0x1, 0xc5, 0x63, 0xa0,

    /* U+0066 "f" */
    0x3, 0xf9, 0x7f, 0x1, 0x43, 0x68, 0x8, 0xa5,
    0xb, 0xc3, 0xfc, 0x25, 0xa, 0xd0, 0x28, 0x14,
    0x80, 0x7f, 0xf6, 0xf8, 0x10,

    /* U+0067 "g" */
    0x1, 0x3f, 0x65, 0xd0, 0x6c, 0xa2, 0xa0, 0x51,
    0x57, 0x18, 0x2, 0x30, 0x15, 0x3, 0x10, 0x3f,
    0x10, 0x3c, 0x46, 0x2, 0xa0, 0x51, 0x57, 0x18,
    0x13, 0x65, 0x15, 0x2, 0x77, 0xf6, 0x3, 0x5c,
    0x41, 0x81, 0xe, 0x77, 0xc7, 0x0, 0x3b, 0x6e,
    0x40,

    /* U+0068 "h" */
    0xd4, 0xf, 0xfe, 0x63, 0xfd, 0x88, 0x5, 0x64,
    0x1c, 0x5, 0x9b, 0x60, 0xc1, 0x2, 0x23, 0x86,
    0x7, 0x10, 0x3f, 0xfa, 0x64,

    /* U+0069 "i" */
    0xf9, 0x25, 0x9a, 0x81, 0xff, 0xc4,

    /* U+006A "j" */
    0x1, 0xb8, 0x4, 0x80, 0x25, 0x1, 0x70, 0x1f,
    0xfd, 0x82, 0xd2, 0x58, 0xa0,

    /* U+006B "k" */
    0xd4, 0xf, 0xfe, 0x73, 0xec, 0xd, 0x21, 0xb0,
    0x14, 0x72, 0x0, 0x93, 0xac, 0xf, 0xfe, 0x2,
    0x34, 0x81, 0xd8, 0xe2, 0x7, 0x63, 0x88, 0x1d,
    0x8e, 0x0,

    /* U+006C "l" */
    0xd4, 0xf, 0xfe, 0x50,

    /* U+006D "m" */
    0xd6, 0xbf, 0x41, 0x3f, 0x50, 0x24, 0x73, 0x6e,
    0xac, 0x54, 0x1, 0x86, 0x11, 0x93, 0x64, 0x1,
    0x81, 0x20, 0x37, 0x3, 0xff, 0x84, 0x40, 0xff,
    0xf2, 0x90, 0x40,

    /* U+006E "n" */
    0xd6, 0x7e, 0xc4, 0x2, 0x36, 0x86, 0x2, 0xa9,
    0x38, 0x61, 0x1, 0x11, 0xc0, 0xff, 0xee, 0x0,

    /* U+006F "o" */
    0x0, 0xf7, 0xe8, 0x4, 0xe2, 0xad, 0xa8, 0x8,
    0xa2, 0x8d, 0x12, 0x18, 0xa, 0x86, 0x0, 0x81,
    0xc4, 0x1, 0x3, 0x89, 0xc, 0x5, 0x43, 0x11,
    0x45, 0x1a, 0x21, 0xc5, 0x5b, 0x50,

    /* U+0070 "p" */
    0xd6, 0x7e, 0xc4, 0x2, 0x4b, 0x43, 0x1, 0x64,
    0x98, 0x30, 0x40, 0xc7, 0x6, 0x7, 0xcc, 0xc,
    0x40, 0x12, 0x0, 0x46, 0x1, 0xdb, 0x60, 0xc2,
    0xb2, 0xe, 0x2, 0x7f, 0xb1, 0x3, 0xff, 0x8a,

    /* U+0071 "q" */
    0x1, 0x3f, 0x65, 0xd0, 0x8d, 0x45, 0x40, 0x9a,
    0xae, 0x30, 0x4, 0x60, 0x2a, 0x6, 0x20, 0x7e,
    0x20, 0x78, 0x8c, 0x5, 0x40, 0x9a, 0xae, 0x30,
    0x28, 0xd4, 0x54, 0xd, 0x3f, 0x66, 0x7, 0xff,
    0x20,

    /* U+0072 "r" */
    0xd6, 0xbf, 0x4, 0xe4, 0x0, 0xcd, 0x82, 0x3,
    0xff, 0xa0,

    /* U+0073 "s" */
    0x6, 0xfe, 0xa4, 0x7, 0x76, 0x9e, 0x0, 0x6a,
    0x4d, 0x40, 0x18, 0xc8, 0x40, 0x32, 0x9b, 0x18,
    0x15, 0xf9, 0xc4, 0x18, 0x3, 0x41, 0x29, 0x92,
    0x50, 0x8e, 0x76, 0x9d, 0x20,

    /* U+0074 "t" */
    0x1, 0xd0, 0x1c, 0x40, 0xfd, 0x78, 0x9e, 0xc8,
    0xe, 0xc2, 0xc7, 0x44, 0xf, 0xfe, 0x71, 0x8d,
    0x0, 0xe6, 0x50,

    /* U+0075 "u" */
    0xd0, 0xd, 0xd9, 0x20, 0x3f, 0xfa, 0xe4, 0x2,
    0x40, 0x24, 0x3, 0x8a, 0xe4, 0x0, 0x51, 0x45,
    0x40, 0x0,

    /* U+0076 "v" */
    0x7c, 0xc, 0x7a, 0x61, 0x81, 0x50, 0x81, 0xa0,
    0x4d, 0x80, 0x52, 0x41, 0xa, 0x1, 0x8a, 0x39,
    0x20, 0x24, 0x81, 0x20, 0x1b, 0x98, 0x28, 0x19,
    0x6, 0x48, 0xe, 0x62, 0x1, 0x0,

    /* U+0077 "w" */
    0x5c, 0x9, 0x72, 0x0, 0xf2, 0x82, 0x1, 0xc2,
    0x1, 0x41, 0x7, 0x0, 0x42, 0x80, 0x48, 0x1,
    0x30, 0x45, 0x20, 0xf, 0x1, 0x81, 0xa5, 0x4,
    0x81, 0x0, 0x41, 0x25, 0xb, 0xe2, 0x6, 0x54,
    0xa1, 0xd3, 0x40, 0x6c, 0x41, 0x8, 0x6, 0x3,
    0x20, 0xc0, 0x90, 0x40, 0x0,

    /* U+0078 "x" */
    0x5d, 0x1, 0x5e, 0x12, 0x52, 0x1a, 0xa0, 0x28,
    0xe6, 0x34, 0x5, 0x4e, 0x30, 0xc, 0x88, 0xa0,
    0x73, 0x25, 0x0, 0xc6, 0x2c, 0x28, 0x17, 0x34,
    0x54, 0xc3, 0x3c, 0x2, 0x70, 0x0,

    /* U+0079 "y" */
    0x7c, 0xc, 0x7a, 0x61, 0x81, 0x50, 0x82, 0xa0,
    0x4d, 0x80, 0x72, 0x83, 0x14, 0x2, 0x3c, 0x52,
    0x40, 0x55, 0x21, 0x80, 0x66, 0x28, 0x40, 0x72,
    0xc, 0xf, 0x61, 0x40, 0xf5, 0x44, 0xe, 0x47,
    0x81, 0xec, 0x50, 0x18,

    /* U+007A "z" */
    0x3f, 0xf8, 0x95, 0xb8, 0x1, 0x9, 0x58, 0x50,
    0x32, 0x69, 0x0, 0xd4, 0xd0, 0x35, 0x1c, 0xc,
    0xd4, 0x20, 0x46, 0x2, 0x94, 0x58, 0xb, 0x78,

    /* U+007B "{" */
    0x3, 0xfb, 0x76, 0x2, 0x98, 0xc0, 0x26, 0xc0,
    0x6c, 0x4, 0x40, 0xff, 0xa0, 0x40, 0x22, 0x80,
    0x54, 0xc0, 0x23, 0x1, 0x2, 0x61, 0x81, 0x10,
    0x3e, 0x20, 0x65, 0x48, 0x14, 0x39, 0x80, 0x3f,
    0x30,

    /* U+007C "|" */
    0x66, 0xd0, 0x1f, 0xfd, 0x60,

    /* U+007D "}" */
    0x3, 0xd3, 0xd0, 0x2b, 0x14, 0x0, 0x5b, 0x20,
    0x37, 0x20, 0x7f, 0x88, 0x1c, 0xc5, 0x2, 0x2d,
    0x30, 0x26, 0x58, 0x4, 0x38, 0x11, 0x4, 0xf,
    0xee, 0x6, 0x2d, 0x80, 0x4c, 0x60, 0xb, 0xb0,
    0x8,

    /* U+007E "~" */
    0x3, 0xe7, 0xfa, 0x92, 0x76, 0x43, 0xda, 0xed,
    0xb6, 0xa8
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 63, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 0, .adv_w = 63, .box_w = 2, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 6, .adv_w = 96, .box_w = 6, .box_h = 4, .ofs_x = 0, .ofs_y = 8},
    {.bitmap_index = 15, .adv_w = 178, .box_w = 11, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 58, .adv_w = 158, .box_w = 10, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 111, .adv_w = 195, .box_w = 12, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 162, .adv_w = 178, .box_w = 11, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 211, .adv_w = 56, .box_w = 3, .box_h = 4, .ofs_x = 0, .ofs_y = 8},
    {.bitmap_index = 216, .adv_w = 87, .box_w = 6, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 244, .adv_w = 87, .box_w = 5, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 272, .adv_w = 114, .box_w = 7, .box_h = 6, .ofs_x = 0, .ofs_y = 6},
    {.bitmap_index = 289, .adv_w = 159, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 311, .adv_w = 64, .box_w = 3, .box_h = 4, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 316, .adv_w = 124, .box_w = 6, .box_h = 3, .ofs_x = 1, .ofs_y = 4},
    {.bitmap_index = 322, .adv_w = 65, .box_w = 2, .box_h = 2, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 324, .adv_w = 123, .box_w = 8, .box_h = 15, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 360, .adv_w = 163, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 397, .adv_w = 110, .box_w = 6, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 411, .adv_w = 150, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 450, .adv_w = 154, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 487, .adv_w = 159, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 522, .adv_w = 152, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 559, .adv_w = 154, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 598, .adv_w = 131, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 628, .adv_w = 163, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 675, .adv_w = 152, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 713, .adv_w = 66, .box_w = 2, .box_h = 8, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 719, .adv_w = 69, .box_w = 3, .box_h = 9, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 728, .adv_w = 126, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 753, .adv_w = 146, .box_w = 7, .box_h = 7, .ofs_x = 1, .ofs_y = 2},
    {.bitmap_index = 765, .adv_w = 126, .box_w = 7, .box_h = 10, .ofs_x = 1, .ofs_y = 1},
    {.bitmap_index = 790, .adv_w = 136, .box_w = 8, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 823, .adv_w = 213, .box_w = 13, .box_h = 14, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 886, .adv_w = 172, .box_w = 11, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 929, .adv_w = 171, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 963, .adv_w = 170, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 999, .adv_w = 176, .box_w = 10, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1027, .adv_w = 155, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1050, .adv_w = 150, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1072, .adv_w = 174, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1114, .adv_w = 183, .box_w = 10, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1130, .adv_w = 70, .box_w = 2, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1134, .adv_w = 162, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1157, .adv_w = 154, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1189, .adv_w = 144, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1198, .adv_w = 203, .box_w = 11, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1234, .adv_w = 178, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1264, .adv_w = 173, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1303, .adv_w = 164, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1331, .adv_w = 173, .box_w = 10, .box_h = 13, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1373, .adv_w = 168, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1408, .adv_w = 159, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1452, .adv_w = 148, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1466, .adv_w = 179, .box_w = 9, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1487, .adv_w = 168, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1529, .adv_w = 205, .box_w = 13, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1585, .adv_w = 162, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1628, .adv_w = 166, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1660, .adv_w = 154, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1692, .adv_w = 83, .box_w = 4, .box_h = 17, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 1706, .adv_w = 123, .box_w = 8, .box_h = 15, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1740, .adv_w = 83, .box_w = 5, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1754, .adv_w = 111, .box_w = 5, .box_h = 3, .ofs_x = 1, .ofs_y = 10},
    {.bitmap_index = 1760, .adv_w = 191, .box_w = 11, .box_h = 3, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1768, .adv_w = 86, .box_w = 4, .box_h = 3, .ofs_x = 1, .ofs_y = 10},
    {.bitmap_index = 1773, .adv_w = 141, .box_w = 8, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1801, .adv_w = 152, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1832, .adv_w = 141, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1862, .adv_w = 152, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1895, .adv_w = 143, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1925, .adv_w = 99, .box_w = 7, .box_h = 13, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1946, .adv_w = 153, .box_w = 9, .box_h = 13, .ofs_x = 0, .ofs_y = -4},
    {.bitmap_index = 1987, .adv_w = 156, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2008, .adv_w = 62, .box_w = 2, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2014, .adv_w = 65, .box_w = 4, .box_h = 15, .ofs_x = -1, .ofs_y = -3},
    {.bitmap_index = 2027, .adv_w = 132, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2053, .adv_w = 62, .box_w = 2, .box_h = 12, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2057, .adv_w = 228, .box_w = 13, .box_h = 9, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2084, .adv_w = 155, .box_w = 8, .box_h = 9, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2100, .adv_w = 147, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2130, .adv_w = 153, .box_w = 8, .box_h = 12, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 2162, .adv_w = 153, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2195, .adv_w = 97, .box_w = 5, .box_h = 9, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2205, .adv_w = 131, .box_w = 8, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2234, .adv_w = 100, .box_w = 6, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2253, .adv_w = 154, .box_w = 8, .box_h = 9, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 2271, .adv_w = 142, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2301, .adv_w = 205, .box_w = 13, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2346, .adv_w = 138, .box_w = 9, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2376, .adv_w = 141, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2412, .adv_w = 130, .box_w = 8, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2436, .adv_w = 94, .box_w = 6, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2469, .adv_w = 60, .box_w = 2, .box_h = 19, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 2474, .adv_w = 94, .box_w = 6, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2507, .adv_w = 143, .box_w = 7, .box_h = 4, .ofs_x = 1, .ofs_y = 3}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 32, .range_length = 95, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};

/*-----------------
 *    KERNING
 *----------------*/


/*Pair left and right glyphs for kerning*/
static const uint8_t kern_pair_glyph_ids[] =
{
    3, 7,
    3, 13,
    3, 14,
    3, 15,
    3, 16,
    3, 21,
    3, 23,
    3, 27,
    3, 28,
    3, 33,
    4, 24,
    7, 3,
    7, 8,
    8, 7,
    8, 13,
    8, 14,
    8, 15,
    8, 16,
    8, 21,
    8, 23,
    8, 27,
    8, 28,
    8, 33,
    9, 9,
    9, 17,
    9, 18,
    9, 19,
    9, 21,
    9, 22,
    9, 23,
    9, 25,
    9, 26,
    9, 92,
    10, 10,
    10, 62,
    10, 94,
    12, 18,
    12, 19,
    12, 20,
    12, 24,
    13, 3,
    13, 8,
    13, 14,
    13, 17,
    13, 18,
    13, 21,
    13, 23,
    13, 24,
    13, 25,
    13, 26,
    14, 3,
    14, 8,
    14, 18,
    14, 19,
    14, 20,
    14, 22,
    14, 24,
    14, 26,
    15, 3,
    15, 8,
    15, 14,
    15, 17,
    15, 18,
    15, 21,
    15, 23,
    15, 24,
    15, 25,
    15, 26,
    16, 16,
    16, 17,
    16, 18,
    16, 19,
    16, 21,
    16, 22,
    16, 23,
    16, 25,
    16, 26,
    17, 10,
    17, 13,
    17, 15,
    17, 16,
    17, 61,
    17, 62,
    17, 94,
    19, 10,
    19, 12,
    19, 14,
    19, 21,
    19, 61,
    19, 62,
    19, 94,
    20, 16,
    20, 18,
    20, 61,
    21, 3,
    21, 8,
    21, 10,
    21, 13,
    21, 15,
    21, 16,
    21, 18,
    21, 24,
    21, 26,
    21, 61,
    21, 62,
    21, 94,
    22, 13,
    22, 15,
    22, 16,
    22, 18,
    22, 61,
    23, 3,
    23, 8,
    23, 10,
    23, 16,
    23, 18,
    23, 24,
    23, 61,
    23, 62,
    23, 94,
    24, 4,
    24, 12,
    24, 13,
    24, 14,
    24, 15,
    24, 16,
    24, 21,
    24, 23,
    24, 30,
    25, 10,
    25, 13,
    25, 15,
    25, 16,
    25, 61,
    25, 62,
    25, 94,
    26, 10,
    26, 13,
    26, 14,
    26, 15,
    26, 16,
    26, 20,
    26, 21,
    26, 23,
    26, 61,
    26, 62,
    26, 94,
    27, 3,
    27, 8,
    28, 3,
    28, 8,
    30, 24,
    33, 3,
    33, 8,
    60, 9,
    60, 17,
    60, 18,
    60, 19,
    60, 21,
    60, 22,
    60, 23,
    60, 25,
    60, 26,
    60, 92,
    61, 3,
    61, 8,
    61, 17,
    61, 18,
    61, 20,
    61, 21,
    61, 22,
    61, 23,
    61, 24,
    61, 25,
    61, 26,
    61, 61,
    92, 9,
    92, 17,
    92, 18,
    92, 19,
    92, 21,
    92, 22,
    92, 23,
    92, 25,
    92, 26,
    92, 92,
    94, 10,
    94, 62,
    94, 94
};

/* Kerning between the respective left and right glyphs
 * 4.4 format which needs to scaled with `kern_scale`*/
static const int8_t kern_pair_values[] =
{
    -4, -26, -16, -26, -17, -13, -10, -2,
    -2, -4, -4, -10, -10, -4, -26, -16,
    -26, -17, -13, -10, -2, -2, -4, -1,
    -7, -9, -4, -11, -4, -12, -7, -5,
    -6, -1, -1, -1, -6, -6, -3, -14,
    -26, -26, -13, -4, -17, -4, -3, -8,
    -3, -12, -16, -16, -9, -10, -5, -2,
    -15, -3, -26, -26, -13, -4, -17, -4,
    -3, -8, -3, -12, -52, -5, -1, -4,
    -14, -1, -13, -5, -1, -7, -4, -4,
    -5, -5, -6, -6, -4, -4, -6, -3,
    -4, -3, -3, -1, -5, -1, -6, -6,
    -7, -4, -4, -1, -5, -5, -2, -8,
    -6, -6, -2, -2, -1, -4, -1, -9,
    -9, -9, -1, -6, -8, -10, -7, -7,
    -2, -8, -17, -9, -17, -17, -9, -8,
    -3, -7, -3, -3, -1, -5, -5, -6,
    -7, -16, -4, -16, -14, -4, -4, -3,
    -3, -6, -6, -2, -2, -2, -2, -6,
    -2, -2, -1, -6, -7, -4, -8, -3,
    -9, -5, -4, -5, -17, -17, -5, -15,
    -1, -3, -1, -3, -6, -1, -9, -52,
    -1, -6, -7, -3, -9, -3, -9, -6,
    -4, -5, -6, -5, -5
};

/*Collect the kern pair's data in one place*/
static const lv_font_fmt_txt_kern_pair_t kern_pairs =
{
    .glyph_ids = kern_pair_glyph_ids,
    .values = kern_pair_values,
    .pair_cnt = 189,
    .glyph_ids_size = 0
};

/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = &kern_pairs,
    .kern_scale = 16,
    .cmap_num = 1,
    .bpp = 3,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t regular = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 20,          /*The maximum line height required by the font*/
    .base_line = 4,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0)
    .underline_position = -1,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if REGULAR*/

